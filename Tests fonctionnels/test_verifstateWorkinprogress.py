# Generated by Selenium IDE
import pytest
import time
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys



class TestVerifstateWorkinprogress():
    def setup_method(self, method):
        self.driver = webdriver.Chrome("C:\\driver\\chromedriver.exe")
        self.driver.get("https://brinksreset.oktapreview.com/")
        self.driver.set_window_size(1382, 744)
        self.driver.find_element(By.ID, "form1").click()
        self.driver.find_element(By.XPATH, "//input[@autocomplete='username']").clear()
        self.driver.find_element(By.XPATH, "//input[@autocomplete='username']").send_keys("b.khlifi@brinks.fr")
        time.sleep(1)
        self.driver.find_element(By.XPATH, "//input[contains(@type,'submit')]").click()
        time.sleep(5)
        self.driver.find_element(By.ID, "form6").click()
        self.driver.find_element(By.NAME, "password").clear()
        self.driver.find_element(By.NAME, "password").send_keys("Brinks2021@")
        self.driver.implicitly_wait(10)
        self.driver.find_element(By.XPATH, "/html/body/div[2]/div/main/div[2]/div/div/form/div[2]/input").click()
        self.driver.find_element(By.XPATH, "/html/body/div[2]/div/section/main/div/section/section/section/section/section/div[5]/a/article").click()

        # Opens a new tab
        self.driver.execute_script("window.open()")
        # Switch to the newly opened tab
        self.driver.switch_to.window(self.driver.window_handles[0])

    def test_VerifStateResolved(self):
        self.driver.get("https://brinksbpotest.service-now.com/nav_to.do?uri=%2Fhome.do")
        print("ok ifram")
        # self.driver.get("https://brinksbpotest.service-now.com/nav_to.do?uri=%2Fhome.do")
        self.driver.find_element(By.CSS_SELECTOR, "#e819de791b778c101f1699f4bd4bcb0a .sn-widget-list-title").click()
        element = self.driver.find_element(By.ID, "e819de791b778c101f1699f4bd4bcb0a")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        self.driver.switch_to.frame(0)
        self.driver.find_element(By.ID, "element.sn_customerservice_customer_interaction.u_device").click()
        self.driver.find_element(By.ID, "sys_display.sn_customerservice_customer_interaction.u_device").click()
        self.driver.find_element(By.ID, "sys_display.sn_customerservice_customer_interaction.u_device").send_keys(
            "BPAURA G3GW")
        self.driver.find_element(By.ID, "sys_display.sn_customerservice_customer_interaction.u_device").send_keys(
            Keys.ENTER)
        self.driver.find_element(By.ID, "sn_customerservice_customer_interaction.u_subcategory").click()
        dropdown = self.driver.find_element(By.ID, "sn_customerservice_customer_interaction.u_subcategory")
        dropdown.find_element(By.XPATH, "//option[. = 'TT - Hardware']").click()
        self.driver.find_element(By.ID, "sn_customerservice_customer_interaction.u_component").click()
        dropdown = self.driver.find_element(By.ID, "sn_customerservice_customer_interaction.u_component")
        dropdown.find_element(By.XPATH, "/html/body/div[2]/form/span[1]/span/div[5]/div[2]/div[2]/div[4]/div[2]/select/option[3]").click()
        self.driver.find_element(By.ID, "sn_customerservice_customer_interaction.u_impact").click()
        dropdown = self.driver.find_element(By.ID, "sn_customerservice_customer_interaction.u_impact")
        dropdown.find_element(By.XPATH, "//option[. = '1 - Out of Service']").click()
        self.driver.find_element(By.ID, "sn_customerservice_customer_interaction.short_description").click()
        self.driver.find_element(By.ID, "sn_customerservice_customer_interaction.short_description").send_keys(
            "testdemo")
        self.driver.find_element(By.ID, "sn_customerservice_customer_interaction.u_description").send_keys(
            "test demo 2")
        self.driver.find_element(By.ID, "sn_customerservice_customer_interaction.do").click()
        self.driver.find_element(By.ID, "sysverb_insert_bottom").click()
        self.driver.find_element(By.ID, "complete_call_bottom").click()
        self.driver.find_element(By.ID, "accept").click()
        self.driver.find_element(By.ID, "dispatch").click()
        self.driver.find_element(By.ID, "vendor_type").click()
        dropdown = self.driver.find_element(By.ID, "vendor_type")
        dropdown.find_element(By.XPATH, "//option[. = 'FLM']").click()
        self.driver.find_element(By.ID, "comments").click()
        element = self.driver.find_element(By.ID, "comments")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        element = self.driver.find_element(By.CSS_SELECTOR, "body")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        self.driver.find_element(By.ID, "comments").send_keys(" message instruction brinks")
        self.driver.find_element(By.ID, "ok_button").click()
        WebDriverWait(self.driver, 50).until(
            expected_conditions.presence_of_element_located((By.LINK_TEXT, "FLM: BRINKS (CR_FLM)")))
        self.driver.find_element(By.XPATH, "(//a[contains(@class,\'popup\')])[1]").click()
        self.driver.find_element(By.XPATH, "//a[contains(.,\'Open Record\')]").click()
        self.driver.find_element(By.XPATH, "//select[@id=\'sn_customerservice_dispatch_task.state\']").click()
        self.driver.find_element(By.NAME, "sn_customerservice_dispatch_task.state").click()
        #self.driver.find_element((By.ID, "close-messages-btn")).click()
        dropdown = self.driver.find_element(By.NAME, "sn_customerservice_dispatch_task.state")
        dropdown.find_element(By.XPATH, "/html/body/div[2]/form/span[1]/span/div[5]/div[1]/div[1]/div[8]/div[2]/select/option[4]").click()
        self.driver.find_element(By.ID, "sysverb_update_bottom").click()
        self.driver.find_element(By.ID, "sys_readonly.sn_customerservice_device_case.state").click()
        #state = self.driver.find_element(By.LINK_TEXT, "Customer Service case is being attended to by an agent")
        #print("state")
        #assert state == "Customer Service case is being attended to by an agent"
        self.driver.find_element(By.XPATH, "(//a[contains(@class,'popup')])[1]").click()
        self.driver.find_element(By.XPATH, "//a[@class='btn btn-sm btn-default pop-over-button pull-right']").click()
        dropdown = self.driver.find_element(By.ID, "sn_customerservice_dispatch_task.state")
        #changement de status option [X]
        dropdown.find_element(By.XPATH, "//*[@id=\'sn_customerservice_dispatch_task.state\']/option[5]").click()
        #cliquer sur le calendrier on site
        self.driver.find_element(By.XPATH, "(//span[contains(@class,'icon-calendar icon')])[4]").click()
        self.driver.find_element(By.XPATH, "//button[@aria-label='Save (Enter)']").click()
        # cliquer sur le calendrier resolution
        self.driver.find_element(By.XPATH, "(//span[@class='icon-calendar icon'])[5]").click()
        self.driver.find_element(By.XPATH, "(//button[contains(@id,'ok')])[2]").click()
        # clique sur update
        self.driver.find_element(By.XPATH, "//button[@id='sysverb_update_bottom']").click()

    def test_VerifStateClosed(self):
        pass

    def test_VerifStateWorkingProgress(self):
        pass



         # fermeture des onglets
    def tearDown_method(self, method):
        for handle in self.driver.window_handles:
            self.driver.switch_to.window(handle)
            self.driver.close()


